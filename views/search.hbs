<div class="ui one column grid">
  <div class="column center aligned">

      <img class="" src="images/moogle_logo.png" alt="" />
      <section id="primary-search">
        <li><button class="ui blue inverted button" type="button" value="challenges">Burger Challenges</button></li>
        <li><button class="ui blue inverted button" type="button" value="foodtruck">Foodtrucks</button></li>
        <li><button class="ui blue inverted button" type="button" value="veggie">Vegetarian/Vegan</button></li>
        <li><button class="ui blue inverted button" type="button" value="allergies">Allergies</button></li>
        <li><button class="ui blue inverted button" type="button" value="meats">Choose Your Meat</button></li>
        <li><button class="ui blue inverted button" type="button" value="top">Top Burgers</button></li>
        <li><button class="ui blue inverted button" type="button" value="sides">Search by sides</button></li>
        <li><button class="ui blue inverted button" type="button" value="cost">Search by cost</button></li>
      </section>

  </div>
</div>

<section id="refined-search">

</section>


<script type="text/javascript">
  // This method creates and displays the secondary search page based on the primary search criteria selected
  var searchBtns = document.getElementsByTagName('button');
  for (var i = 0; i < searchBtns.length; i++) {
    searchBtns[i].addEventListener('click', function() {
      var primary = document.getElementById('primary-search');
      var selection = this.value;
      selection = selection.toLowerCase();

      var criteria = {};
      if (selection == "foodtruck" || selection == "veggie" || selection == "challenges") {
        if (selection == "challenges") {
          selection = selection + ".exists";
          criteria[selection] = "true";
        } else {
          criteria[selection] = "true";
        }
      }
      primary.style.display = "none";

      var xhr = new XMLHttpRequest();
      xhr.open("GET", "/search", true);
      xhr.onload = function() {
        if (xhr.readyState != XMLHttpRequest.DONE) {
          return;
        }
        if (xhr.status == 200) {
          if (selection == "challenges.exists") {
            selection = "challenges";
          }
          var response = JSON.parse(xhr.responseText)[0][selection][0];
          var context = {
            "name" : response.name,
            "description" : response.description,
            "defaultCriteria" : response.defaultCriteria,
            "imageURL" : response.imageURL
          };
          var template = document.getElementById('refined-search-template').innerHTML;
          var templateScript = _.template(template);
          var html = templateScript(context);
          var div = document.createElement('div');
          div.innerHTML = html;
          var second = document.getElementById('refined-search');
          second.appendChild(div);
          second.style.display = "block";
          getExtraCriteria(selection);
          addDefaults(criteria);
          document.getElementById('search-btn').addEventListener("click", function() {
            getSearchCriteria(criteria);
          });
        }
      };
      xhr.send(null);
    });
  }

  // This method adds the default search criteria buttons to the secondary search page
  var addDefaults = function(obj) {
    var btns = document.getElementsByClassName('defaults');
    for (var i = 0; i < btns.length; i++) {
      btns[i].addEventListener("click", function() {
        var selection = this.name;
        if (this.value == "true") {
          this.value = false;
        } else {
          this.value = true;
        }
        this.classList.toggle("selected");
      });
    }
  }

  // This will request a database query from the server based on search criteria
  var getSearchCriteria = function(obj) {
    var checkBtns = document.getElementsByClassName('defaults');
    for (var i = 0; i < checkBtns.length; i++) {
      if (checkBtns[i].value == "true") {
        obj[checkBtns[i].name] = checkBtns[i].value;
      }
    }
    console.log(obj);
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "/location/q", true);
    xhr.setRequestHeader('Content-Type', 'application/json;charset=utf-8');
    xhr.onload = function() {
      if (xhr.readyState != XMLHttpRequest.DONE) {
        return;
      }
      if (xhr.status == 200) {
        setSession(xhr.responseText);
      }
    };
    xhr.send(JSON.stringify(obj));
  };

  // This will set the session data and render the map
  var setSession = function(jason) {
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "/location/set-session", true);
    xhr.setRequestHeader('Content-Type', 'application/json;charset=utf-8');
    xhr.onload = function() {
      if (xhr.readyState != XMLHttpRequest.DONE) {
        return;
      }
      if (xhr.status == 200) {
        // force a javascript redirect
        window.location = "/location/map";
      }
    };
    xhr.send(jason);
  };

  // This method gets and displays any additional search criteria buttons
  var getExtraCriteria = function(selection) {
    var parent = document.getElementById('defaults-cont');
    var primeSearch = selection;
    // var primeSearch = Object.keys(selection)[0];
    if (primeSearch == "allergies") {
      var newDiv = createDiv();
      var newBtn = createBtn();
      newBtn.innerHTML = "Gluten Free";
      newBtn.name = selection + ".glutenFree";
      newDiv.appendChild(newBtn);
      parent.appendChild(newDiv);
    } else if (primeSearch == "meats") {
      var arr = ["Grassfed", "Kobe", "Bison", "Angus", "Turkey", "Lamb", "Elk"];
      for (var i = 0; i < arr.length; i++) {
        var newDiv = createDiv();
        var newBtn = createBtn();
        newBtn.innerHTML = arr[i];
        newBtn.name = selection + "." + arr[i].toLowerCase();
        newBtn.value = false;
        newDiv.appendChild(newBtn);
        parent.appendChild(newDiv);
      }
    } else if (primeSearch == "sides") {
      var arr = ["duckFries", "macAndCheese", "tots"];
      for (var i = 0; i < arr.length; i++) {
        var newDiv = createDiv();
        var newBtn = createBtn();
        switch (arr[i]) {
          case "duckFries":
            newBtn.innerHTML = "Duck Fat Fries";
            break;
          case "macAndCheese":
            newBtn.innerHTML = "Mac & Cheese";
            break;
          case "tots":
            newBtn.innerHTML = "Tater Tots";
            break;
        }
        newBtn.name = selection + "." + arr[i];
        newBtn.value = false;
        newDiv.appendChild(newBtn);
        parent.appendChild(newDiv);
      }
    }
  };

  // Creates a new Div with all necessary classes for search criteria
  var createDiv = function() {
    var div = document.createElement('div');
    div.classList.add("column");
    div.classList.add("center");
    div.classList.add("aligned");
    return div;
  };

  // Creates a new Button with all necessary classes for search criteria
  var createBtn = function() {
    var btn = document.createElement('button');
    btn.classList.add("circular");
    btn.classList.add("ui");
    btn.classList.add("button");
    btn.classList.add("defaults");
    return btn;
  };
</script>


<script type="text/template" id="refined-search-template">
  <div class="ui stackable two column grid">
    <div id="img-container" class="column left aligned">
      <img id="search-img" class="ui segment" src="<%= imageURL %>" alt="" id="detailSearchImg"/>
    </div>
    <div class="column">
      <div id="title" class="ui segment">
        <h1> <%= name %> </h1>
      </div>
    </div>
  </div>
  <!-- <hr> -->
  <div id="search-desc" class="ui segments">
    <p>
      <%= description %>
    </p>
  </div>
  <div class="ui segment">
  <div id="defaults-cont" class="ui stackable four column grid">
    <div class="column center aligned">
      <button class="circular ui button defaults" name="alcohol" value="false">
        Alcohol
      </button>
    </div>
    <div class="column center aligned">
      <button class="circular ui button defaults" name="byob" value="false">
        B.Y.O.B.
      </button>
    </div>
    <div class="column center aligned">
      <button class="circular ui button defaults" name="latenight" value="false">
        Open late
      </button>
    </div>
    <div class="column center aligned">
      <button class="circular ui button defaults" name="outdoor" value="false">
        Outdoor Seating
      </button>
    </div>
  </div>
</div>
  <div class="ui segment">
    <button id="search-btn" class="ui button">Search</button>
  </div>
</script>
